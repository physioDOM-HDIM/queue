#!/usr/bin/env node

var Etcd = require('node-etcd'),
    program = require('commander'),
    fs = require('fs'),
    pkg = require("./package.json"),
    moment = require('moment'),
    os = require('os');

var IP = "";

program
	.version( pkg.version )
	.option('-h, --host [value]','etcd server [172.17.42.1]','172.17.42.1')
	.parse(process.argv);

etcd = new Etcd( program.host, '4001' );

function getIP() {
	var interfaces = os.networkInterfaces();
	var ip;
	
	for( interface in interfaces ) {
		if ( interface !== "lo" ) {
			interfaces[interface].forEach( function(addr) {
				if( addr.family === 'IPv4' && addr.internal == false ) {
					ip = addr.address;
				}
			});
		}
	}
	if( IP !== ip ) {
		IP = ip;
		console.log( moment().toISOString()+"\tqueue ip : "+IP);
		etcd.set('services/queue', JSON.stringify({ ip: ip }));
	}
}

console.log( "-------------------------------------------------------------");
setInterval( function() {
	getIP();
}, 30000 );

getIP();

function rmService() {
	etcd.del('services/queue', function() {
		console.log( moment().toISOString()+"\tstop conf-register");
		process.exit(0);
	});
}

process.on('exit' , function() {
	rmService();
});

process.on('SIGINT', function() {
	rmService();
});

process.on('SIGTERM', function() {
	rmService();
});
